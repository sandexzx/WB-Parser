#!/bin/bash

# =============================================================================
# WB SLOTS MONITOR - –ü–ï–†–í–ê–Ø –ß–ê–°–¢–¨ –î–ï–ü–õ–û–Ø –ù–ê UBUNTU 24.04
# =============================================================================
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–ª–æ—Ç–æ–≤ WB
# –ü–ï–†–í–ê–Ø –ß–ê–°–¢–¨: –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∫–æ–¥–∞, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
# =============================================================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_NAME="wb-slots-monitor"
PROJECT_DIR="/opt/$PROJECT_NAME"
SERVICE_NAME="wb-slots-monitor"
USER_NAME="root"
PYTHON_VERSION="3.12"
VENV_PATH="$PROJECT_DIR/.venv"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_step() {
    echo -e "${PURPLE}[STEP]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Ç root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        log_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –æ—Ç –∏–º–µ–Ω–∏ root"
        log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo bash $0"
        exit 1
    fi
}

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
show_banner() {
    clear
    echo -e "${CYAN}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                  üöÄ WB SLOTS MONITOR üöÄ                      ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë             –ß–ê–°–¢–¨ 1: –ü–û–î–ì–û–¢–û–í–ö–ê –ò –ù–ê–°–¢–†–û–ô–ö–ê                 ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞        ‚ïë"
    echo "‚ïë  —Å–ª–æ—Ç–æ–≤ –ø—Ä–∏–µ–º–∫–∏ –Ω–∞ Wildberries                               ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë  üì¶ Python 3.12 + aiogram 3.19.0                           ‚ïë"
    echo "‚ïë  üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π                      ‚ïë"
    echo "‚ïë  ‚öôÔ∏è –°–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏                                       ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
    echo
}

# –°–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
collect_configuration() {
    log_step "–°–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
    echo
    
    # GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    echo -e "${CYAN}üìÇ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∫–æ–¥–∞:${NC}"
    GITHUB_URL="https://github.com/sandexzx/WB-Parser.git"
    log_info "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $GITHUB_URL"
    
    if [[ -n "$GITHUB_URL" ]]; then
        read -p "–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ç–∫—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: main): " GITHUB_BRANCH
        GITHUB_BRANCH=${GITHUB_BRANCH:-main}
        USE_GITHUB=true
    else
        USE_GITHUB=false
        log_info "–ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (—Ñ–∞–π–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏)"
    fi
    
    echo
    echo -e "${CYAN}üîê API –∫–ª—é—á–∏ –∏ —Ç–æ–∫–µ–Ω—ã (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û):${NC}"
    
    # WB API –∫–ª—é—á
    while [[ -z "$WB_API_KEY" ]]; do
        read -p "–í–≤–µ–¥–∏—Ç–µ WB API –∫–ª—é—á: " WB_API_KEY
        if [[ -z "$WB_API_KEY" ]]; then
            log_warning "WB API –∫–ª—é—á –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞!"
        fi
    done
    
    # Telegram Bot Token
    while [[ -z "$TELEGRAM_BOT_TOKEN" ]]; do
        read -p "–í–≤–µ–¥–∏—Ç–µ Telegram Bot Token: " TELEGRAM_BOT_TOKEN
        if [[ -z "$TELEGRAM_BOT_TOKEN" ]]; then
            log_warning "Telegram Bot Token –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!"
        fi
    done
    
    # Telegram Chat ID (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)
    while [[ -z "$TELEGRAM_CHAT_ID" ]]; do
        read -p "–í–≤–µ–¥–∏—Ç–µ Telegram Chat ID (–∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è): " TELEGRAM_CHAT_ID
        if [[ -z "$TELEGRAM_CHAT_ID" ]]; then
            log_warning "Telegram Chat ID –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!"
        fi
    done
    
    echo
    echo -e "${CYAN}üìä Google Sheets –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:${NC}"
    read -p "–í–≤–µ–¥–∏—Ç–µ URL Google Sheets —Ç–∞–±–ª–∏—Ü—ã: " GOOGLE_SHEETS_URL
    
    if [[ -n "$GOOGLE_SHEETS_URL" ]]; then
        log_info "–§–∞–π–ª credentials.json –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞—Ç—å –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —ç—Ç–∞–ø–∞"
        log_info "Service Account –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ"
    fi
    
    echo
    echo -e "${CYAN}‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:${NC}"
    
    # –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏
    read -p "–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 120): " CHECK_INTERVAL
    CHECK_INTERVAL=${CHECK_INTERVAL:-120}
    
    # –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    echo "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:"
    echo "1) DEBUG (–ø–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏)"
    echo "2) INFO (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ª–æ–≥–∏)"
    echo "3) WARNING (—Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –æ—à–∏–±–∫–∏)"
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 2): " LOG_LEVEL_CHOICE
    
    case $LOG_LEVEL_CHOICE in
        1) LOG_LEVEL="DEBUG" ;;
        3) LOG_LEVEL="WARNING" ;;
        *) LOG_LEVEL="INFO" ;;
    esac
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É
    echo
    echo -e "${YELLOW}üìã –°–í–û–î–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:${NC}"
    echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    if [[ "$USE_GITHUB" == "true" ]]; then
        echo "‚îÇ –ò—Å—Ç–æ—á–Ω–∏–∫: GitHub ($GITHUB_URL, –≤–µ—Ç–∫–∞: $GITHUB_BRANCH)"
    else
        echo "‚îÇ –ò—Å—Ç–æ—á–Ω–∏–∫: –õ–æ–∫–∞–ª—å–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è"
    fi
    echo "‚îÇ WB API –∫–ª—é—á: ${WB_API_KEY:0:10}..."
    echo "‚îÇ Telegram Token: ${TELEGRAM_BOT_TOKEN:0:15}..."
    echo "‚îÇ Telegram Chat ID: $TELEGRAM_CHAT_ID"
    echo "‚îÇ Google Sheets: ${GOOGLE_SHEETS_URL:0:40}..."
    echo "‚îÇ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: $CHECK_INTERVAL —Å–µ–∫"
    echo "‚îÇ –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: $LOG_LEVEL"
    echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
    echo
    
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å —ç—Ç–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏? (y/N): " CONFIRM
    if [[ ! "$CONFIRM" =~ ^[Yy]$ ]]; then
        log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 0
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
setup_system() {
    log_step "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
    apt update -qq
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä)
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    apt install -y \
        software-properties-common \
        build-essential \
        curl \
        wget \
        git \
        systemd \
        python3-pip \
        python3-venv \
        python3-dev \
        sqlite3 \
        unzip \
        ca-certificates
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Python 3.12 –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if ! command -v python3.12 &> /dev/null; then
        log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.12..."
        add-apt-repository -y ppa:deadsnakes/ppa
        apt update -qq
        apt install -y python3.12 python3.12-venv python3.12-dev
    fi
    
    log_success "–°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ (–ø—Ä–æ–ø—É—â–µ–Ω–æ - —Ä–∞–±–æ—Ç–∞–µ–º –ø–æ–¥ root)
create_service_user() {
    log_step "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞"
    log_info "–°–µ—Ä–≤–∏—Å –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º root"
    log_success "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
setup_project_directory() {
    log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $PROJECT_DIR..."
    mkdir -p "$PROJECT_DIR"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞
    if [[ "$USE_GITHUB" == "true" ]]; then
        log_info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏–∑ GitHub..."
        if [[ -d "$PROJECT_DIR/.git" ]]; then
            cd "$PROJECT_DIR"
            git fetch origin
            git reset --hard "origin/$GITHUB_BRANCH"
        else
            rm -rf "$PROJECT_DIR"/*
            git clone --branch "$GITHUB_BRANCH" "$GITHUB_URL" "$PROJECT_DIR"
        fi
    else
        log_info "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
        # –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ .py —Ñ–∞–π–ª—ã –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
        cp -r ./*.py "$PROJECT_DIR/" 2>/dev/null || true
        cp -r ./requirements.txt "$PROJECT_DIR/" 2>/dev/null || true
        cp -r ./credentials.json "$PROJECT_DIR/" 2>/dev/null || true
        cp -r ./.env.example "$PROJECT_DIR/" 2>/dev/null || true
        cp -r ./tests "$PROJECT_DIR/" 2>/dev/null || true
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        if [[ ! -f "$PROJECT_DIR/main.py" ]]; then
            log_error "–§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!"
            log_info "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –∫–æ–¥–æ–º –ø—Ä–æ–µ–∫—Ç–∞"
            exit 1
        fi
    fi
    
    log_success "–ö–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ —Ä–∞–∑–º–µ—â–µ–Ω –≤ $PROJECT_DIR"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è
setup_python_environment() {
    log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    
    cd "$PROJECT_DIR"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    python3.12 -m venv "$VENV_PATH"
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
    "$VENV_PATH/bin/pip" install --upgrade pip setuptools wheel
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    if [[ -f "requirements.txt" ]]; then
        "$VENV_PATH/bin/pip" install -r requirements.txt
    else
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é
        log_warning "requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        "$VENV_PATH/bin/pip" install \
            aiogram==3.19.0 \
            aiohttp \
            gspread \
            google-auth \
            google-auth-oauthlib \
            google-auth-httplib2 \
            python-dotenv \
            python-dateutil \
            APScheduler \
            pydantic \
            pytest \
            pytest-asyncio
    fi
    
    log_success "Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ .env
create_env_file() {
    log_step "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"
    
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    cat > "$PROJECT_DIR/.env" << EOF
# WB API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
WB_API_KEY=$WB_API_KEY
WB_BASE_URL=https://supplies-api.wildberries.ru

# Rate limiting –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
MAX_REQUESTS_PER_MINUTE=30
REQUEST_DELAY_SECONDS=2.0
COEFFICIENTS_REQUESTS_PER_MINUTE=6

# –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
ENABLE_ADAPTIVE_MONITORING=true
MIN_MONITORING_INTERVAL=10

# Google Sheets –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
GOOGLE_CREDENTIALS_FILE=credentials.json
GOOGLE_SHEETS_URL=$GOOGLE_SHEETS_URL

# Telegram –±–æ—Ç
TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN
TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL=sqlite:///wb_monitor.db

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL=$LOG_LEVEL
LOG_FILE=logs/wb_monitor.log

# –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
CHECK_INTERVAL_SECONDS=$CHECK_INTERVAL
EOF
    
    log_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
setup_permissions() {
    log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    mkdir -p "$PROJECT_DIR/logs"
    mkdir -p "$PROJECT_DIR/found_slots"
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –Ω–∞ —Ñ–∞–π–ª—ã (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –¥–ª—è root)
    chmod 755 "$PROJECT_DIR"
    chmod 644 "$PROJECT_DIR"/.env 2>/dev/null || true
    chmod 755 "$PROJECT_DIR"/*.py 2>/dev/null || true
    chmod 755 "$PROJECT_DIR/logs"
    chmod 755 "$PROJECT_DIR/found_slots"
    
    log_success "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
test_installation() {
    log_step "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    
    cd "$PROJECT_DIR"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    if "$VENV_PATH/bin/python" -c "import sys; print(f'Python {sys.version}')" > /dev/null 2>&1; then
        log_success "Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        log_error "–ü—Ä–æ–±–ª–µ–º–∞ —Å Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    if "$VENV_PATH/bin/python" -c "import aiogram, aiohttp, gspread; print('–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ OK')" > /dev/null 2>&1; then
        log_success "–û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        log_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    if [[ -f ".env" && -s ".env" ]]; then
        log_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
    else
        log_error "–ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º —Ñ–∞–π–ª–æ–º"
        return 1
    fi
    
    log_success "–ë–∞–∑–æ–≤–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –ü–æ–∫–∞–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —ç—Ç–∞–ø–∞
show_next_steps() {
    log_step "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    
    echo
    echo -e "${CYAN}üéØ –ü–ï–†–í–´–ô –≠–¢–ê–ü –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!${NC}"
    echo -e "${YELLOW}üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:${NC}"
    echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    echo "‚îÇ                                                             ‚îÇ"
    echo "‚îÇ  1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª credentials.json –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:    ‚îÇ"
    echo "‚îÇ     $PROJECT_DIR/credentials.json                           ‚îÇ"
    echo "‚îÇ                                                             ‚îÇ"
    echo "‚îÇ  2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ JSON-–∫–ª—é—á –≤–∞—à–µ–≥–æ Google Service Account      ‚îÇ"
    echo "‚îÇ     –≤ —Ñ–∞–π–ª credentials.json                                 ‚îÇ"
    echo "‚îÇ                                                             ‚îÇ"
    echo "‚îÇ  3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Service Account –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ Google    ‚îÇ"
    echo "‚îÇ     Sheets —Ç–∞–±–ª–∏—Ü–µ                                          ‚îÇ"
    echo "‚îÇ                                                             ‚îÇ"
    echo "‚îÇ  4. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è credentials.json –∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Ç–æ—Ä—É—é —á–∞—Å—Ç—å: ‚îÇ"
    echo "‚îÇ     bash deploy_wb_bot_second.sh                            ‚îÇ"
    echo "‚îÇ                                                             ‚îÇ"
    echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
    echo
    echo -e "${GREEN}üìÅ –§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤: $PROJECT_DIR${NC}"
    echo -e "${GREEN}üìù –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: $PROJECT_DIR/.env${NC}"
    echo
    echo -e "${YELLOW}‚ö†Ô∏è  –í–ê–ñ–ù–û: –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–æ–∑–¥–∞—Ç—å credentials.json –ø–µ—Ä–µ–¥ –≤—Ç–æ—Ä—ã–º —ç—Ç–∞–ø–æ–º!${NC}"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
cleanup_on_error() {
    log_error "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    log_info "–ß–∞—Å—Ç–∏—á–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞..."
    
    # –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ —Å–æ–∑–¥–∞–ª–∏
    rm -rf "$PROJECT_DIR" 2>/dev/null || true
    
    log_info "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    exit 1
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ trap –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    trap cleanup_on_error ERR
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    check_root
    show_banner
    
    # –°–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    collect_configuration
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    log_info "–ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–≤—ã–π —ç—Ç–∞–ø —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WB Slots Monitor..."
    echo
    
    setup_system
    create_service_user
    setup_project_directory
    setup_python_environment
    create_env_file
    setup_permissions
    test_installation
    
    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    echo
    show_next_steps
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"