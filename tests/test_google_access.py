#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets
"""

import os
import sys
import json
import re
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

try:
    from dotenv import load_dotenv
    load_dotenv()
except ImportError:
    pass

def check_credentials_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª credentials.json"""
    print("üîê –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–ê CREDENTIALS.JSON")
    print("="*50)
    
    if not os.path.exists("credentials.json"):
        print("‚ùå –§–∞–π–ª credentials.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    try:
        with open("credentials.json", "r") as f:
            creds_data = json.load(f)
        
        print("‚úÖ –§–∞–π–ª credentials.json –Ω–∞–π–¥–µ–Ω –∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        client_email = creds_data.get("client_email", "–ù–ï –ù–ê–ô–î–ï–ù")
        project_id = creds_data.get("project_id", "–ù–ï –ù–ê–ô–î–ï–ù")
        
        print(f"üìß Service Account Email: {client_email}")
        print(f"üèóÔ∏è Project ID: {project_id}")
        
        print(f"\nüí° –í–ê–ñ–ù–û: –î–æ–±–∞–≤—å—Ç–µ email {client_email}")
        print("   –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets —Ç–∞–±–ª–∏—Ü–µ!")
        
        return True
        
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ JSON —Ñ–∞–π–ª–µ: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return False

def check_sheets_url():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º URL —Ç–∞–±–ª–∏—Ü—ã"""
    print(f"\nüìä –ü–†–û–í–ï–†–ö–ê URL –¢–ê–ë–õ–ò–¶–´")
    print("="*50)
    
    sheets_url = os.getenv("GOOGLE_SHEETS_URL", "")
    
    if not sheets_url:
        print("‚ùå GOOGLE_SHEETS_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
        return None
    
    print(f"üîó URL: {sheets_url}")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–∞–±–ª–∏—Ü—ã
    patterns = [
        r'/spreadsheets/d/([a-zA-Z0-9-_]+)',
        r'key=([a-zA-Z0-9-_]+)',
        r'/d/([a-zA-Z0-9-_]+)'
    ]
    
    sheet_id = None
    for pattern in patterns:
        match = re.search(pattern, sheets_url)
        if match:
            sheet_id = match.group(1)
            break
    
    if sheet_id:
        print(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω ID —Ç–∞–±–ª–∏—Ü—ã: {sheet_id}")
        print(f"üîó –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞: https://docs.google.com/spreadsheets/d/{sheet_id}/edit")
        return sheet_id
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –∏–∑ URL!")
        print("üí° URL –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∏–¥–∞:")
        print("   https://docs.google.com/spreadsheets/d/SHEET_ID/edit")
        return None

async def test_direct_api_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ Google Sheets API"""
    print(f"\nüîå –¢–ï–°–¢ –ü–†–Ø–ú–û–ì–û –î–û–°–¢–£–ü–ê –ö API")
    print("="*50)
    
    try:
        import gspread
        from google.oauth2.service_account import Credentials
        
        # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
        scope = [
            "https://spreadsheets.google.com/feeds",
            "https://www.googleapis.com/auth/drive"
        ]
        
        creds = Credentials.from_service_account_file("credentials.json", scopes=scope)
        client = gspread.authorize(creds)
        
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Google API —É—Å–ø–µ—à–Ω–∞")
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
        try:
            spreadsheets = client.list_permissions()
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü: {len(spreadsheets)}")
        except:
            print("‚ÑπÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
        
        # –ü—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
        sheet_id = check_sheets_url()
        if sheet_id:
            try:
                workbook = client.open_by_key(sheet_id)
                print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞: {workbook.title}")
                
                # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤
                worksheets = workbook.worksheets()
                print(f"üìÑ –õ–∏—Å—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ: {len(worksheets)}")
                
                for i, ws in enumerate(worksheets):
                    print(f"  {i+1}. {ws.title}")
                
                return True
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã: {e}")
                
                if "404" in str(e):
                    print("üí° –û—à–∏–±–∫–∞ 404 –æ–∑–Ω–∞—á–∞–µ—Ç:")
                    print("  - Service Account –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ")
                    print("  - –ò–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
                return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False

def print_solution_steps():
    """–í—ã–≤–æ–¥–∏–º –ø–æ—à–∞–≥–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã"""
    print(f"\nüõ†Ô∏è –ü–û–®–ê–ì–û–í–û–ï –†–ï–®–ï–ù–ò–ï")
    print("="*50)
    
    print("1. üìß –ù–∞–π–¥–∏—Ç–µ email Service Account –≤ credentials.json")
    print("   (–ø–æ–ª–µ 'client_email')")
    
    print("\n2. üîó –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à—É Google Sheets —Ç–∞–±–ª–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    
    print("\n3. üì§ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è' (Share) –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É")
    
    print("\n4. ‚ûï –î–æ–±–∞–≤—å—Ç–µ email Service Account —Å –ø—Ä–∞–≤–∞–º–∏:")
    print("   - '–†–µ–¥–∞–∫—Ç–æ—Ä' (Editor) –∏–ª–∏ '–ß–∏—Ç–∞—Ç–µ–ª—å' (Viewer)")
    
    print("\n5. ‚úÖ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –ù–ï –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞")
    print("   (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º')")
    
    print("\n6. üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –î–û–°–¢–£–ü–ê –ö GOOGLE SHEETS")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏
    creds_ok = check_credentials_file()
    
    if not creds_ok:
        print("\n‚ùå –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã —Å credentials.json")
        return
    
    sheet_id = check_sheets_url()
    
    if not sheet_id:
        print("\n‚ùå –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø—Ä–∞–≤—å—Ç–µ URL —Ç–∞–±–ª–∏—Ü—ã –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø
    api_ok = await test_direct_api_access()
    
    if not api_ok:
        print_solution_steps()
    else:
        print("\nüéâ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢! –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.")

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())