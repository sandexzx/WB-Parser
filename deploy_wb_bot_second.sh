#!/bin/bash

# =============================================================================
# WB SLOTS MONITOR - –í–¢–û–†–ê–Ø –ß–ê–°–¢–¨ –î–ï–ü–õ–û–Ø –ù–ê UBUNTU 24.04
# =============================================================================
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–ª–æ—Ç–æ–≤ WB
# –í–¢–û–†–ê–Ø –ß–ê–°–¢–¨: –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞, –∑–∞–ø—É—Å–∫ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
# =============================================================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_NAME="wb-slots-monitor"
PROJECT_DIR="/opt/$PROJECT_NAME"
SERVICE_NAME="wb-slots-monitor"
USER_NAME="root"
PYTHON_VERSION="3.12"
VENV_PATH="$PROJECT_DIR/.venv"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_step() {
    echo -e "${PURPLE}[STEP]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Ç root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        log_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –æ—Ç –∏–º–µ–Ω–∏ root"
        log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo bash $0"
        exit 1
    fi
}

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
show_banner() {
    clear
    echo -e "${CYAN}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                  üöÄ WB SLOTS MONITOR üöÄ                      ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë            –ß–ê–°–¢–¨ 2: –ó–ê–ü–£–°–ö –ò –ù–ê–°–¢–†–û–ô–ö–ê –°–ï–†–í–ò–°–ê              ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë  –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞                     ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë  üîÑ Systemd —Å–µ—Ä–≤–∏—Å —Å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º                           ‚ïë"
    echo "‚ïë  ‚ö° –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ                               ‚ïë"
    echo "‚ïë  üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ                                ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
    echo
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –≤—Ç–æ—Ä–æ–º—É —ç—Ç–∞–ø—É
check_prerequisites() {
    log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –∑–∞–ø—É—Å–∫—É"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
    if [[ ! -d "$PROJECT_DIR" ]]; then
        log_error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $PROJECT_DIR"
        log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å: deploy_wb_bot_first.sh"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
    if [[ ! -f "$PROJECT_DIR/.env" ]]; then
        log_error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $PROJECT_DIR"
        log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å: deploy_wb_bot_first.sh"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è credentials.json
    if [[ ! -f "$PROJECT_DIR/credentials.json" ]]; then
        log_error "–§–∞–π–ª credentials.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $PROJECT_DIR"
        log_info "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª credentials.json —Å –¥–∞–Ω–Ω—ã–º–∏ Google Service Account"
        log_info "–ü—Ä–∏–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:"
        echo "{"
        echo "  \"type\": \"service_account\","
        echo "  \"project_id\": \"your-project-id\","
        echo "  \"private_key_id\": \"...\","
        echo "  \"private_key\": \"...\","
        echo "  \"client_email\": \"...\","
        echo "  \"client_id\": \"...\","
        echo "  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\","
        echo "  \"token_uri\": \"https://oauth2.googleapis.com/token\""
        echo "}"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [[ ! -d "$VENV_PATH" ]]; then
        log_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: $VENV_PATH"
        log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å: deploy_wb_bot_first.sh"
        exit 1
    fi
    
    log_success "–í—Å–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
detect_main_file() {
    log_step "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞"
    
    cd "$PROJECT_DIR"
    
    # –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –≤—Å–µ–≥–¥–∞ run_with_bot.py
    if [[ -f "run_with_bot.py" ]]; then
        MAIN_FILE="run_with_bot.py"
        log_info "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω run_with_bot.py –∫–∞–∫ –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞."
    else
        log_error "–§–∞–π–ª run_with_bot.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ ($PROJECT_DIR)!"
        log_info "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ run_with_bot.py –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞."
        exit 1
    fi
    
    log_success "–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª: $MAIN_FILE"
}

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
create_systemd_service() {
    log_step "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞"
    
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å–µ—Ä–≤–∏—Å–∞ /etc/systemd/system/$SERVICE_NAME.service..."
    cat > "/etc/systemd/system/$SERVICE_NAME.service" << EOF
[Unit]
Description=WB Slots Monitor - Telegram Bot for Wildberries Slot Monitoring
Documentation=https://github.com/sandexzx/WB-Parser
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
User=$USER_NAME
Group=$USER_NAME
WorkingDirectory=$PROJECT_DIR
Environment=PATH=$VENV_PATH/bin
EnvironmentFile=$PROJECT_DIR/.env
ExecStart=$VENV_PATH/bin/python $PROJECT_DIR/$MAIN_FILE
Restart=always
RestartSec=10
StandardOutput=journal
StandardError=journal
SyslogIdentifier=$SERVICE_NAME

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –¥–ª—è root)
NoNewPrivileges=false

# –õ–∏–º–∏—Ç—ã —Ä–µ—Å—É—Ä—Å–æ–≤
LimitNOFILE=65536
MemoryMax=512M

[Install]
WantedBy=multi-user.target
EOF
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd
    log_info "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ systemd..."
    systemctl daemon-reload
    
    log_success "Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω"
}

# –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
setup_final_permissions() {
    log_step "–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –Ω–∞ credentials.json
    chmod 600 "$PROJECT_DIR/credentials.json"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p "$PROJECT_DIR/logs"
    mkdir -p "$PROJECT_DIR/found_slots"
    chmod 755 "$PROJECT_DIR/logs"
    chmod 755 "$PROJECT_DIR/found_slots"
    
    log_success "–§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test_configuration() {
    log_step "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    
    cd "$PROJECT_DIR"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    if "$VENV_PATH/bin/python" -c "import sys; print(f'Python {sys.version}')" > /dev/null 2>&1; then
        log_success "Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        log_error "–ü—Ä–æ–±–ª–µ–º–∞ —Å Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    if "$VENV_PATH/bin/python" -c "import aiogram, aiohttp, gspread; print('–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ OK')" > /dev/null 2>&1; then
        log_success "–û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        log_error "–ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ credentials.json
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ credentials.json..."
    if "$VENV_PATH/bin/python" -c "import json; json.load(open('credentials.json')); print('Credentials OK')" > /dev/null 2>&1; then
        log_success "–§–∞–π–ª credentials.json –≤–∞–ª–∏–¥–µ–Ω"
    else
        log_error "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Ñ–∞–π–ª–æ–º credentials.json"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞..."
    if source "$PROJECT_DIR/.env" && [[ -n "$TELEGRAM_BOT_TOKEN" && -n "$TELEGRAM_CHAT_ID" && -n "$WB_API_KEY" ]]; then
        log_success "–û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    else
        log_error "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env"
        return 1
    fi
    
    log_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞"
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
start_service() {
    log_step "–ó–∞–ø—É—Å–∫ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"
    
    # –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
    log_info "–í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
    systemctl enable "$SERVICE_NAME"
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
    log_info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
    systemctl start "$SERVICE_NAME"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    sleep 5
    if systemctl is-active --quiet "$SERVICE_NAME"; then
        log_success "–°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log_warning "–°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω, –Ω–æ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º—ã"
        log_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: journalctl -u $SERVICE_NAME -f"
    fi
}

# –ü–æ–∫–∞–∑ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é
show_management_help() {
    log_step "–°–ø—Ä–∞–≤–∫–∞ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –±–æ—Ç–æ–º"
    
    echo
    echo -e "${CYAN}üîß –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ï–†–í–ò–°–û–ú WB SLOTS MONITOR:${NC}"
    echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    echo "‚îÇ                     SYSTEMD –ö–û–ú–ê–ù–î–´                        ‚îÇ"
    echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
    echo "‚îÇ –ó–∞–ø—É—Å–∫:        systemctl start $SERVICE_NAME"
    echo "‚îÇ –û—Å—Ç–∞–Ω–æ–≤–∫–∞:     systemctl stop $SERVICE_NAME"
    echo "‚îÇ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:    systemctl restart $SERVICE_NAME"
    echo "‚îÇ –°—Ç–∞—Ç—É—Å:        systemctl status $SERVICE_NAME"
    echo "‚îÇ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫:    systemctl enable $SERVICE_NAME"
    echo "‚îÇ –û—Ç–∫–ª—é—á–∏—Ç—å:     systemctl disable $SERVICE_NAME"
    echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
    echo
    echo -e "${CYAN}üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì –ò –õ–û–ì–ò:${NC}"
    echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    echo "‚îÇ –õ–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏:                                   ‚îÇ"
    echo "‚îÇ   journalctl -u $SERVICE_NAME -f"
    echo "‚îÇ                                                             ‚îÇ"
    echo "‚îÇ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤:                                  ‚îÇ"
    echo "‚îÇ   journalctl -u $SERVICE_NAME -n 50"
    echo "‚îÇ                                                             ‚îÇ"
    echo "‚îÇ –õ–æ–≥–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:                                           ‚îÇ"
    echo "‚îÇ   journalctl -u $SERVICE_NAME --since today"
    echo "‚îÇ                                                             ‚îÇ"
    echo "‚îÇ –§–∞–π–ª—ã –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:                                    ‚îÇ"
    echo "‚îÇ   tail -f $PROJECT_DIR/logs/wb_monitor.log"
    echo "‚îÇ   tail -f $PROJECT_DIR/logs/telegram_bot.log"
    echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
    echo
    echo -e "${CYAN}üìÅ –§–ê–ô–õ–´ –ò –î–ò–†–ï–ö–¢–û–†–ò–ò:${NC}"
    echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    echo "‚îÇ –ü—Ä–æ–µ–∫—Ç:        $PROJECT_DIR"
    echo "‚îÇ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:  $PROJECT_DIR/.env"
    echo "‚îÇ Credentials:   $PROJECT_DIR/credentials.json"
    echo "‚îÇ –õ–æ–≥–∏:          $PROJECT_DIR/logs/"
    echo "‚îÇ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã: $PROJECT_DIR/found_slots/"
    echo "‚îÇ –°–µ—Ä–≤–∏—Å:        /etc/systemd/system/$SERVICE_NAME.service"
    echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
    echo
    echo -e "${CYAN}üîß –û–ë–°–õ–£–ñ–ò–í–ê–ù–ò–ï:${NC}"
    echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    echo "‚îÇ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:                               ‚îÇ"
    echo "‚îÇ   nano $PROJECT_DIR/.env"
    echo "‚îÇ   systemctl restart $SERVICE_NAME"
    echo "‚îÇ                                                             ‚îÇ"
    echo "‚îÇ –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Git):                      ‚îÇ"
    echo "‚îÇ   cd $PROJECT_DIR"
    echo "‚îÇ   git pull origin main"
    echo "‚îÇ   systemctl restart $SERVICE_NAME"
    echo "‚îÇ                                                             ‚îÇ"
    echo "‚îÇ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞:                                     ‚îÇ"
    echo "‚îÇ   curl -s https://api.telegram.org/bot\\$TELEGRAM_BOT_TOKEN/getMe"
    echo "‚îÇ                                                             ‚îÇ"
    echo "‚îÇ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ (–±–µ–∑ —Å–µ—Ä–≤–∏—Å–∞):                             ‚îÇ"
    echo "‚îÇ   cd $PROJECT_DIR"
    echo "‚îÇ   $VENV_PATH/bin/python $MAIN_FILE"
    echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
    echo
    echo -e "${CYAN}üìä –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê:${NC}"
    echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    echo "‚îÇ –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞: $(systemctl is-active $SERVICE_NAME 2>/dev/null || echo '–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω')"
    echo "‚îÇ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫: $(systemctl is-enabled $SERVICE_NAME 2>/dev/null || echo '–æ—Ç–∫–ª—é—á–µ–Ω')"
    echo "‚îÇ –ü–æ—Ä—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: $(netstat -tuln | grep -E ':(443|80|8080)' | wc -l) –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤"
    echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
    echo
    echo -e "${GREEN}‚úÖ –ü–û–õ–ù–´–ô –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!${NC}"
    echo -e "${YELLOW}üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!${NC}"
    echo -e "${CYAN}üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –≤ Telegram!${NC}"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
cleanup_on_error() {
    log_error "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≤—Ç–æ—Ä–æ–≥–æ —ç—Ç–∞–ø–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    log_info "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–æ–∑–¥–∞–Ω
    systemctl stop "$SERVICE_NAME" 2>/dev/null || true
    systemctl disable "$SERVICE_NAME" 2>/dev/null || true
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å–µ—Ä–≤–∏—Å–∞
    rm -f "/etc/systemd/system/$SERVICE_NAME.service"
    systemctl daemon-reload
    
    log_info "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    log_info "–ö–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ –æ—Å—Ç–∞–ª—Å—è –≤ $PROJECT_DIR"
    exit 1
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ trap –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    trap cleanup_on_error ERR
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    check_root
    show_banner
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    check_prerequisites
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —ç—Ç–∞–ø–∞
    log_info "–ù–∞—á–∏–Ω–∞–µ–º –≤—Ç–æ—Ä–æ–π —ç—Ç–∞–ø —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WB Slots Monitor..."
    echo
    
    detect_main_file
    create_systemd_service
    setup_final_permissions
    test_configuration
    start_service
    
    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    echo
    show_management_help
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"