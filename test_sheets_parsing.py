#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ Google Sheets –≤ –Ω–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
"""

import asyncio
import os
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))

from sheets_parser import GoogleSheetsParser
from config import config

try:
    from dotenv import load_dotenv
    load_dotenv(override=True)
    print(f"‚úÖ .env —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω")
except ImportError:
    print("‚ö†Ô∏è –ú–æ–¥—É–ª—å python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env –Ω–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
    pass

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
config = config.from_env()

async def test_sheets_parsing():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–∫–∞–∑—á–∏–∫–∞
    """
    print("üìä –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ê–†–°–ò–ù–ì–ê GOOGLE SHEETS")
    print("="*60)
    
    # URL —Ç–∞–±–ª–∏—Ü—ã –æ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞
    sheets_url = os.getenv("GOOGLE_SHEETS_URL", config.google_sheets_url)
    
    if not sheets_url:
        print("‚ùå URL —Ç–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GOOGLE_SHEETS_URL –≤ .env")
        return
    
    print(f"üîó –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∞–±–ª–∏—Ü—É: {sheets_url}") # –í–æ—Ç —Ç—É—Ç –¥–æ–±–∞–≤–∏–º –≤—ã–≤–æ–¥ —Å—Å—ã–ª–∫–∏
    
    parser = GoogleSheetsParser(config.google_sheets_credentials_file, sheets_url)
    
    try:
        print("üîÑ –ß–∏—Ç–∞–µ–º –∑–∞–¥–∞—á–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã...")
        tasks = await parser.get_monitoring_tasks()
        
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(tasks)} –∑–∞–¥–∞—á")
        
        for i, task in enumerate(tasks, 1):
            print(f"\nüì¶ –ó–∞–¥–∞—á–∞ {i}:")
            print(f"  –ë–∞—Ä–∫–æ–¥: {task.barcode}")
            print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {task.quantity}")
            print(f"  –°–∫–ª–∞–¥—ã: {task.allowed_warehouses}")
            print(f"  –ü–µ—Ä–∏–æ–¥: {task.date_from} - {task.date_to}")
            print(f"  –ú–∞–∫—Å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç: {task.max_coefficient}")
            print(f"  –ê–∫—Ç–∏–≤–Ω–∞: {task.is_active}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_sheets_parsing())
